https://github.com/public-apis/public-apis


Estrutura 


https://worldathletics.org/records/competition-performance-rankings?type=2&year=2007&sortBy=score&page=1


paginacao - (definir umtima pagina) 
       /div class="container--pagination__inner
           <a "url"
           
ler a tabela de todas as competições url = https://worldathletics.org/records/competition-performance-rankings?type=2&year=2007&sortBy=score&page=1
    <tr class="cpr__ranking-items" 
         buscar todos atributos - cada ano é uma transação
    
   


 
    
todas as provas de uma competição: url = https://worldathletics.org/records/competition-performance-rankings/ranking/537154
    <div class="cpr-result-scores__results cpr-results">
    
          provas individuais
                <div class="cpr-result-score"
                     
                     ler atletas url = https://worldathletics.org/athletes/kenya/micah-kemboi-kogo-14208652
                     
                            dados <div class="profileBasicInfo_stats__RB2La">
                            foto <div class="profileBasicInfo_athletePhotoName__10f6u"><div 
                         
 

transactions em  banco
     https://www.postgresqltutorial.com/postgresql-python/transaction/
     https://www.psycopg.org/docs/usage.html
     https://wiki.postgresql.org/wiki/Psycopg2_Tutorial
     https://pynative.com/python-postgresql-tutorial/
     https://pynative.com/python-postgresql-insert-update-delete-table-data-to-perform-crud-operations/#h-python-postgresql-insert-into-database-table
     https://pynative.com/python-postgresql-transaction-management-using-commit-and-rollback/


estudos


<div class="profileBasicInfo_statValue__IXJTW">20 NOV 1996</div>
     